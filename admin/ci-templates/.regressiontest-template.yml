# Set up to only fetch the files and prepare everything for merge requests
.regressiontests-template:
  image: biophysics/gcc-gromacs
  stage: configure-build

  variables:
    KUBERNETES_CPU_LIMIT: 1
    KUBERNETES_CPU_REQUEST: 1
    KUBERNETES_MEMORY_LIMIT: 2Gi
  only:
    refs:
      - web
      - pushes
      - merge_requests
      - schedules
  except:
    variables:
      - $GROMACS_RELEASE
# Always clone the default version for this branch, release-2020 in this case
  script:
    - export REGTESTBRANCH=release-2020
    - if [[ ! -d regressiontests ]] ; then
        mkdir regressiontests ;
        cd regressiontests ;
        git init ;
        cd .. ;
      fi
    - cd regressiontests
    - git fetch https://gitlab.com/gromacs/gromacs-regressiontests.git $REGTESTBRANCH
    - git checkout -qf FETCH_HEAD
    - git clean -ffdxq
    - git gc
    - git archive -o gmx-regressiontests.tar.gz --prefix regressiontests/ -9 HEAD
    - echo "Build regressiontests for branch $REGTESTBRANCH"
    - mv gmx-regressiontests.tar.gz ..
    - cd ..
  artifacts:
    paths:
      - gmx-regressiontests.tar.gz

.regressiontests-release-template:
  image: biophysics/gcc-gromacs
  stage: release-package

  variables:
    KUBERNETES_CPU_LIMIT: 1
    KUBERNETES_CPU_REQUEST: 1
    KUBERNETES_MEMORY_LIMIT: 2Gi
  only:
    refs:
      - web
      - schedules
      - triggers
    variables:
      - $GROMACS_RELEASE
  script:
    - VERSION=`cat version.json |
        python3 -c "import json,sys; print(json.load(sys.stdin)['version'])"`
    - REGTESTNAME="regressiontests-"$VERSION
    - if [[ $GROMACS_RELEASE != "true" ]] ; then
          REGTESTNAME=$REGTESTNAME-dev ;
      fi
    - export REGTESTBRANCH=release-2020
    - if [[ $CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME == "release-20"[1-2][0-9] ]] ; then
         export REGTESTBRANCH=$CI_COMMIT_REF_NAME ;
      fi
    - if [[ ! -d regressiontests ]] ; then
        mkdir regressiontests ;
        cd regressiontests ;
        git init ;
        cd .. ;
      fi
    - cd regressiontests
    - git fetch https://gitlab.com/gromacs/gromacs-regressiontests.git $REGTESTBRANCH
    - git checkout -qf FETCH_HEAD
    - git clean -ffdxq
    - git gc
    - git archive -o $REGTESTNAME.tar.gz --prefix $REGTESTNAME/ -9 HEAD
    - mv $REGTESTNAME.tar.gz ..
    - echo "Build regressiontests for branch  $REGTESTBRANCH"
    - cd ..
  artifacts:
    paths:
      - regressiontests-*.tar.gz
